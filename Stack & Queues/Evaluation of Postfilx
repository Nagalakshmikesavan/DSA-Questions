class Solution {
    public int evalRPN(String[] str) {
        Stack<Integer> st = new Stack<>();
        
        for(int i=0;i<str.length;i++)
        {
            
                
                switch(str[i])
                {
                    case "+" :
                        st.push(st.pop()+st.pop());
                        break;
                    case "-" :
                        st.push(-st.pop()+st.pop());
                        break;
                    case "*" :
                        st.push(st.pop()*st.pop());
                        break;
                    case "/" :
                        int val1 = st.pop(),val2=st.pop();
                        st.push(val2/val1);
                        break;
                    default:
                        st.push(Integer.parseInt(str[i]));
                }
            
        }
        return st.pop();
        
    }
}

Example 1:

Input: tokens = ["2","1","+","3","*"]
Output: 9
Explanation: ((2 + 1) * 3) = 9

Example 2:

Input: tokens = ["4","13","5","/","+"]
Output: 6
Explanation: (4 + (13 / 5)) = 6
